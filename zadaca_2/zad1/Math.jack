/**
 * A basic math library.
 */
class Math
{
    static Array twoToThe;

    /** Initializes the library. */
    function void init()
    {
        var int i, pow;
        let twoToThe = Array.new(16);
        
        let pow = 1;
        while (i < 16)
        {
            let twoToThe[i] = pow;
            let pow = pow + pow;
            let i = i + 1;
        } 
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x)
    {
        if (x < 0)
        {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y)
    {
        var int sum, shifted, i;
        let shifted = x;
        
        while (i < 16)
        {
            if (twoToThe[i] & y)
            {
                let sum = sum + shifted;
            }
            let shifted = shifted + shifted;
            let i = i + 1;
        }
        
        return sum;
    }

    /** Returns the integer part of x/y. */
    function int _divide(int x, int y)
    {
        var int q;
        if (y > x)
        {
            return 0;
        }
        let q = Math.divide(x, 2*y);
        if (x - (2*q * y) < y)
        {
            return (2*q);
        }
        return (2*q) + 1;
    }

    function int divide(int x, int y)
    {
        if (((y > 0) & (x < 0)) | ((y < 0) & (x > 0)))
        {
            return Math.multiply(Math._divide(Math.abs(x), Math.abs(y)), -1);
        }
        else
        {
            if (y = 0)
            {
                return -1;
            }
            return Math._divide(Math.abs(x), Math.abs(y));
        }
    }
    

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x)
    {
        var int i, y, pow;
        
        if (x < 0)
        {
            return 0;
        }
        
        let i = 7;
        while (i > -1)
        {
            let pow = Math.multiply(y + twoToThe[i], y + twoToThe[i]);
            if (pow < x)
            {
                let y = y + twoToThe[i];
            }
            let i = i - 1;
        }
        
        return y;
    }

    /** Returns the greater number. */
    function int max(int x, int y)
    {
        if (x > y)
        {
            return x;
        }
        return y;
    }

    /** Returns the smaller number. */
    function int min(int x, int y)
    {
        if (x < y)
        {
            return x;
        }
        return y;
    }
    /* log_2 */
    function int log(int x)
    {
        var int i;
        let i = 0;
        while (i < 16)
        {
            if (twoToThe[i] > x)
            {
                return i - 1;
            }
            else 
            {
                if (twoToThe[i] = x)
                {
                    return i;
                }
            }
            let i = i + 1;
        }
        return 0;
    }

    function int pow(int a, int b)
    {
        var int result, exponent, base;
        let result = 1;
        let exponent = b;
        let base = a;
        while (~(exponent = 0))
        {
            if ((exponent & 1) = 1)
            {
                let result = result*base;
            }
            let base = base*base;
            let exponent = Math.divide(exponent, 2);
        }

        return result;
    }
}